
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: operations.diagnosis.kubediag.org
spec:
  group: diagnosis.kubediag.org
  names:
    kind: Operation
    listKind: OperationList
    plural: operations
    singular: operation
  scope: Cluster
  validation:
    openAPIV3Schema:
      description: Operation is the Schema for the operations API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: OperationSpec defines the desired state of Operation.
          properties:
            dependences:
              description: Dependences is the list of all depended operations required
                to be precedently executed.
              items:
                type: string
              type: array
            processor:
              description: Processor describes how to register a operation processor
                into kubediag.
              properties:
                httpServer:
                  description: One and only one of the following processor should
                    be specified. HTTPServer specifies the http server to do operations.
                  properties:
                    address:
                      description: Address is the serving address of the processor.
                        It must be either an ip or a dns address. Defaults to kubediag
                        agent advertised address if not specified.
                      type: string
                    path:
                      description: Path is the serving http path of processor.
                      type: string
                    port:
                      description: Port is the serving port of the processor. Defaults
                        to kubediag agent serving port if not specified.
                      format: int32
                      type: integer
                    scheme:
                      description: Scheme is the serving scheme of processor. It must
                        be either http or https.
                      type: string
                  type: object
                scriptRunner:
                  description: ScriptRunner contains the information to run a script.
                  properties:
                    argKeys:
                      description: ArgKeys contains a slice of keys in parameters
                        or operationResults. The script arguments are generated from
                        specified key value pairs. No argument will be passed to the
                        script if not specified.
                      items:
                        type: string
                      type: array
                    operationResultKey:
                      description: OperationResultKey is the prefix of keys to store
                        script stdout, stderr or error message in operationResults.
                        Execution results will not be updated if not specified.
                      type: string
                    script:
                      description: Script is the content of shell script.
                      type: string
                  required:
                  - script
                  type: object
                timeoutSeconds:
                  description: Number of seconds after which the processor times out.
                    Defaults to 30 seconds. Minimum value is 1.
                  format: int32
                  type: integer
              type: object
            storage:
              description: Storage represents the type of storage for operation results.
                Operation results will not be stored if nil.
              properties:
                contents:
                  description: Contents specify which contents to store.
                  items:
                    description: Content specify which content to store.
                    properties:
                      key:
                        description: Key specify the scrap key to get content
                        type: string
                      type:
                        description: Default to raw, which means it will store the
                          response of processor. If set to file, the response of processor
                          will be treated as file path, and stored as file.
                        type: string
                    required:
                    - key
                    - type
                    type: object
                  type: array
                volumeType:
                  description: Type specify which storage to save object. Only support
                    minio now.
                  type: string
              required:
              - contents
              - volumeType
              type: object
          required:
          - processor
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
