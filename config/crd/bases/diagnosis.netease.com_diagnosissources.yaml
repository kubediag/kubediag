
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: diagnosissources.diagnosis.netease.com
spec:
  group: diagnosis.netease.com
  names:
    kind: DiagnosisSource
    listKind: DiagnosisSourceList
    plural: diagnosissources
    singular: diagnosissource
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: DiagnosisSource is the Schema for the diagnosissources API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: DiagnosisSourceSpec defines the desired state of DiagnosisSource.
          properties:
            assignedDiagnosers:
              description: AssignedDiagnosers is the list of diagnosers to execute
                diagnosing logics. Diagnoses generated by the source contains predefined
                diagnosers.
              items:
                description: NamespacedName represents a kubernetes api resource.
                properties:
                  name:
                    description: Name specifies the name of a kubernetes api resource.
                    type: string
                  namespace:
                    description: Namespace specifies the namespace of a kubernetes
                      api resource.
                    type: string
                required:
                - name
                - namespace
                type: object
              type: array
            assignedInformationCollectors:
              description: AssignedInformationCollectors is the list of information
                collectors to execute information collecting logics. Diagnoses generated
                by the source contains predefined information collectors.
              items:
                description: NamespacedName represents a kubernetes api resource.
                properties:
                  name:
                    description: Name specifies the name of a kubernetes api resource.
                    type: string
                  namespace:
                    description: Namespace specifies the namespace of a kubernetes
                      api resource.
                    type: string
                required:
                - name
                - namespace
                type: object
              type: array
            assignedRecoverers:
              description: AssignedRecoverers is the list of recoverers to execute
                recovering logics. Diagnoses generated by the source contains predefined
                recoverers.
              items:
                description: NamespacedName represents a kubernetes api resource.
                properties:
                  name:
                    description: Name specifies the name of a kubernetes api resource.
                    type: string
                  namespace:
                    description: Namespace specifies the namespace of a kubernetes
                      api resource.
                    type: string
                required:
                - name
                - namespace
                type: object
              type: array
            commandExecutors:
              description: CommandExecutors is the list of commands to execute during
                information collecting, diagnosing and recovering. Diagnoses generated
                by the source contains predefined command executors.
              items:
                description: CommandExecutorSpec describes how to execute a command
                  with the given arguments. A CommandExecutor could be an information
                  collector, a diagnoser or a recoverer.
                properties:
                  command:
                    description: Command represents a command being prepared and run.
                    items:
                      type: string
                    type: array
                  timeoutSeconds:
                    description: Number of seconds after which the command times out.
                      Defaults to 30 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  type:
                    description: "Type is the type of the command executor. There
                      are three possible type values: \n InformationCollector: The
                      command executor will be run by information manager. Diagnoser:
                      The command executor will be run by diagnoser chain. Recoverer:
                      The command executor will be run by recoverer chain."
                    type: string
                required:
                - command
                - type
                type: object
              type: array
            context:
              description: Context is a blob of information about the diagnosis, meant
                to be user-facing content and display instructions. Diagnoses generated
                by the source contains predefined context.
              type: object
            profilers:
              description: Profilers is the list of profiler desired behaviors to
                be performed during information collecting, diagnosing and recovering.
              items:
                description: ProfilerSpec describes desired behavior of a profiler
                  to be performed against a program to determine its performance status.
                properties:
                  expirationSeconds:
                    description: Number of seconds after which the profiler endpoint
                      expires. Defaults to 7200 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  go:
                    description: One and only one of the following programming languages
                      should be specified. Go specifies the action to perform for
                      profiling a go program.
                    properties:
                      source:
                        description: Source specifies the profile source. It must
                          be a local file path or a URL.
                        type: string
                      tls:
                        description: TLS specifies the secret reference for source
                        properties:
                          secretReference:
                            description: secretReference specifies the secret in cluster
                              which hold token and ca.crt to access GoProfilerSpec.Source
                            properties:
                              name:
                                description: Name specifies the name of a kubernetes
                                  api resource.
                                type: string
                              namespace:
                                description: Namespace specifies the namespace of
                                  a kubernetes api resource.
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        type: object
                      type:
                        description: 'Heap: The profiler will be run by heap Profile:
                          The profiler will be run by cpu profile Goroutine: The profiler
                          will be run by goroutine'
                        type: string
                    required:
                    - source
                    - type
                    type: object
                  java:
                    description: Java specifies the action to perform for profiling
                      a java program.
                    properties:
                      hprofFilePath:
                        description: HPROFFilePath is the path of hprof file. It must
                          be an absolute path on node.
                        type: string
                      type:
                        description: "Type is the type of the java profiler. There
                          are two possible type values: \n Arthas: The profiler will
                          be run by arthas. MemoryAnalyzer: The profiler will be run
                          by eclipse memory analyzer."
                        type: string
                    required:
                    - type
                    type: object
                  name:
                    description: Name specifies the name of a profiler.
                    type: string
                  timeoutSeconds:
                    description: Number of seconds after which the profiler times
                      out. Defaults to 30 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  type:
                    description: "Type is the type of the profiler. There are three
                      possible type values: \n InformationCollector: The profiler
                      will be run by information manager. Diagnoser: The profiler
                      will be run by diagnoser chain. Recoverer: The profiler will
                      be run by recoverer chain."
                    type: string
                required:
                - name
                - type
                type: object
              type: array
            sourceTemplate:
              description: SourceTemplate is the template of diagnosis source. An
                diagnosis source generates diagnosis according to the template.
              properties:
                kubernetesEventTemplate:
                  description: KubernetesEventTemplate specifies the template to create
                    an diagnosis from a kubernetes event.
                  properties:
                    regexp:
                      description: Regexp is the regular expression for matching kubernetes
                        event template.
                      properties:
                        action:
                          description: Action is the regular expression for matching
                            "Action" of kubernetes event.
                          type: string
                        count:
                          description: Count is the regular expression for matching
                            "Count" of kubernetes event.
                          type: string
                        firstTimestamp:
                          description: FirstTimestamp is the regular expression for
                            matching "FirstTimestamp" of kubernetes event.
                          type: string
                        involvedObject:
                          description: InvolvedObject is the regular expression for
                            matching "InvolvedObject" of kubernetes event. All fields
                            of "InvolvedObject" are regular expressions.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        lastTimestamp:
                          description: LastTimestamp is the regular expression for
                            matching "LastTimestamp" of kubernetes event.
                          type: string
                        message:
                          description: Message is the regular expression for matching
                            "Message" of kubernetes event.
                          type: string
                        name:
                          description: Name is the regular expression for matching
                            "Name" of kubernetes event.
                          type: string
                        namespace:
                          description: Namespace is the regular expression for matching
                            "Namespace" of kubernetes event.
                          type: string
                        reason:
                          description: Reason is the regular expression for matching
                            "Reason" of kubernetes event.
                          type: string
                        reportingController:
                          description: ReportingController is the regular expression
                            for matching "ReportingController" of kubernetes event.
                          type: string
                        reportingInstance:
                          description: ReportingInstance is the regular expression
                            for matching "ReportingInstance" of kubernetes event.
                          type: string
                        source:
                          description: Source is the regular expression for matching
                            "Source" of kubernetes event. All fields of "Source" are
                            regular expressions.
                          properties:
                            component:
                              description: Component from which the event is generated.
                              type: string
                            host:
                              description: Node name on which the event is generated.
                              type: string
                          type: object
                        type:
                          description: Type is the regular expression for matching
                            "Type" of kubernetes event.
                          type: string
                      type: object
                  required:
                  - regexp
                  type: object
                prometheusAlertTemplate:
                  description: One and only one of the following source should be
                    specified. PrometheusAlertTemplate specifies the template to create
                    an diagnosis from a prometheus alert.
                  properties:
                    nodeNameReferenceLabel:
                      description: NodeNameReferenceLabel specifies the label for
                        setting NodeName of generated diagnosis.
                      type: string
                    regexp:
                      description: Regexp is the regular expression for matching prometheus
                        alert template.
                      properties:
                        alertName:
                          description: AlertName is the regular expression for matching
                            "AlertName" of prometheus alert.
                          type: string
                        annotations:
                          additionalProperties:
                            description: A LabelValue is an associated value for a
                              LabelName.
                            type: string
                          description: Annotations is the regular expression for matching
                            "Annotations" of prometheus alert. Only annotation values
                            are regular expressions while all annotation names must
                            be identical to the prometheus alert annotation names.
                          type: object
                        endsAt:
                          description: EndsAt is the regular expression for matching
                            "EndsAt" of prometheus alert.
                          type: string
                        generatorURL:
                          description: GeneratorURL is the regular expression for
                            matching "GeneratorURL" of prometheus alert.
                          type: string
                        labels:
                          additionalProperties:
                            description: A LabelValue is an associated value for a
                              LabelName.
                            type: string
                          description: Labels is the regular expression for matching
                            "Labels" of prometheus alert. Only label values are regular
                            expressions while all label names must be identical to
                            the prometheus alert label names.
                          type: object
                        startsAt:
                          description: StartsAt is the regular expression for matching
                            "StartsAt" of prometheus alert.
                          type: string
                      type: object
                  required:
                  - nodeNameReferenceLabel
                  - regexp
                  type: object
                type:
                  description: "Type is the type of the source template. There are
                    two possible type values: \n PrometheusAlert: The diagnosis is
                    generated from a prometheus alert. KubernetesEvent: The diagnosis
                    is generated from a kubernetes event."
                  type: string
              required:
              - type
              type: object
          required:
          - sourceTemplate
          type: object
        status:
          description: DiagnosisSourceStatus defines the observed state of DiagnosisSource.
          properties:
            lastDiagnosis:
              description: LastDiagnosis contains details about last diagnosis generated
                by the source.
              type: object
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
