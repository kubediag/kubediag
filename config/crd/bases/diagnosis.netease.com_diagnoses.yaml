
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: diagnoses.diagnosis.netease.com
spec:
  group: diagnosis.netease.com
  names:
    kind: Diagnosis
    listKind: DiagnosisList
    plural: diagnoses
    singular: diagnosis
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Diagnosis is the Schema for the diagnoses API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: DiagnosisSpec defines the desired state of Diagnosis.
          properties:
            assignedDiagnosers:
              description: AssignedDiagnosers is the list of diagnosers to execute
                diagnosing logics. Diagnosers would be executed in the specified sequence.
                Only assigned diagnosers will be executed.
              items:
                description: NamespacedName represents a kubernetes api resource.
                properties:
                  name:
                    description: Name specifies the name of a kubernetes api resource.
                    type: string
                  namespace:
                    description: Namespace specifies the namespace of a kubernetes
                      api resource.
                    type: string
                required:
                - name
                - namespace
                type: object
              type: array
            assignedInformationCollectors:
              description: AssignedInformationCollectors is the list of information
                collectors to execute information collecting logics. Information collectors
                would be executed in the specified sequence. Only assigned information
                collectors will be executed.
              items:
                description: NamespacedName represents a kubernetes api resource.
                properties:
                  name:
                    description: Name specifies the name of a kubernetes api resource.
                    type: string
                  namespace:
                    description: Namespace specifies the namespace of a kubernetes
                      api resource.
                    type: string
                required:
                - name
                - namespace
                type: object
              type: array
            assignedRecoverers:
              description: AssignedRecoverers is the list of recoverers to execute
                recovering logics. Recoverers would be executed in the specified sequence.
                Only assigned recoverers will be executed.
              items:
                description: NamespacedName represents a kubernetes api resource.
                properties:
                  name:
                    description: Name specifies the name of a kubernetes api resource.
                    type: string
                  namespace:
                    description: Namespace specifies the namespace of a kubernetes
                      api resource.
                    type: string
                required:
                - name
                - namespace
                type: object
              type: array
            commandExecutors:
              description: CommandExecutors is the list of commands to execute during
                information collecting, diagnosing and recovering.
              items:
                description: CommandExecutorSpec describes how to execute a command
                  with the given arguments. A CommandExecutor could be an information
                  collector, a diagnoser or a recoverer.
                properties:
                  command:
                    description: Command represents a command being prepared and run.
                    items:
                      type: string
                    type: array
                  timeoutSeconds:
                    description: Number of seconds after which the command times out.
                      Defaults to 30 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  type:
                    description: "Type is the type of the command executor. There
                      are three possible type values: \n InformationCollector: The
                      command executor will be run by information manager. Diagnoser:
                      The command executor will be run by diagnoser chain. Recoverer:
                      The command executor will be run by recoverer chain."
                    type: string
                required:
                - command
                - type
                type: object
              type: array
            context:
              description: Context is a blob of information about the diagnosis, meant
                to be user-facing content and display instructions. This field may
                contain customized values for custom source.
              type: object
            kubernetesEvent:
              description: KubernetesEvent contains the kubernetes event about the
                diagnosis from kubernetes event source. This must be specified if
                diagnosis source is KubernetesEvent.
              properties:
                action:
                  description: What action was taken/failed regarding to the Regarding
                    object.
                  type: string
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the
                    latest internal value, and may reject unrecognized values. More
                    info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                  type: string
                count:
                  description: The number of times this event has occurred.
                  format: int32
                  type: integer
                eventTime:
                  description: Time when this Event was first observed.
                  format: date-time
                  type: string
                firstTimestamp:
                  description: The time at which the event was first recorded. (Time
                    of server receipt is in TypeMeta.)
                  format: date-time
                  type: string
                involvedObject:
                  description: The object that this event is about.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                kind:
                  description: 'Kind is a string value representing the REST resource
                    this object represents. Servers may infer this from the endpoint
                    the client submits requests to. Cannot be updated. In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                lastTimestamp:
                  description: The time at which the most recent occurrence of this
                    event was recorded.
                  format: date-time
                  type: string
                message:
                  description: 'A human-readable description of the status of this
                    operation. TODO: decide on maximum length.'
                  type: string
                metadata:
                  description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                  type: object
                reason:
                  description: 'This should be a short, machine understandable string
                    that gives the reason for the transition into the object''s current
                    status. TODO: provide exact specification for format.'
                  type: string
                related:
                  description: Optional secondary object for more complex actions.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                reportingComponent:
                  description: Name of the controller that emitted this Event, e.g.
                    `kubernetes.io/kubelet`.
                  type: string
                reportingInstance:
                  description: ID of the controller instance, e.g. `kubelet-xyzf`.
                  type: string
                series:
                  description: Data about the Event series this event represents or
                    nil if it's a singleton Event.
                  properties:
                    count:
                      description: Number of occurrences in this series up to the
                        last heartbeat time
                      format: int32
                      type: integer
                    lastObservedTime:
                      description: Time of the last occurrence observed
                      format: date-time
                      type: string
                    state:
                      description: 'State of this Series: Ongoing or Finished Deprecated.
                        Planned removal for 1.18'
                      type: string
                  type: object
                source:
                  description: The component reporting this event. Should be a short
                    machine understandable string.
                  properties:
                    component:
                      description: Component from which the event is generated.
                      type: string
                    host:
                      description: Node name on which the event is generated.
                      type: string
                  type: object
                type:
                  description: Type of this event (Normal, Warning), new types could
                    be added in the future
                  type: string
              required:
              - involvedObject
              - metadata
              type: object
            nodeName:
              description: One of NodeName and PodReference must be specified. NodeName
                is a specific node which the diagnosis is on.
              type: string
            podReference:
              description: PodReference contains details of the target pod.
              properties:
                containerName:
                  description: ContainerName specifies name of the target container.
                  type: string
                name:
                  description: Name specifies the name of a pod.
                  type: string
                namespace:
                  description: Namespace specifies the namespace of a pod.
                  type: string
              required:
              - name
              - namespace
              type: object
            profilers:
              description: Profilers is the list of profiler desired behaviors to
                be performed during information collecting, diagnosing and recovering.
              items:
                description: ProfilerSpec describes desired behavior of a profiler
                  to be performed against a program to determine its performance status.
                properties:
                  expirationSeconds:
                    description: Number of seconds after which the profiler endpoint
                      expires. Defaults to 7200 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  go:
                    description: One and only one of the following programming languages
                      should be specified. Go specifies the action to perform for
                      profiling a go program.
                    properties:
                      source:
                        description: Source specifies the profile source. It must
                          be a local file path or a URL.
                        type: string
                      tls:
                        description: TLS specifies the secret reference for source
                        properties:
                          secretReference:
                            description: secretReference specifies the secret in cluster
                              which hold token and ca.crt to access GoProfilerSpec.Source
                            properties:
                              name:
                                description: Name specifies the name of a kubernetes
                                  api resource.
                                type: string
                              namespace:
                                description: Namespace specifies the namespace of
                                  a kubernetes api resource.
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        type: object
                      type:
                        description: 'Heap: The profiler will be run by heap Profile:
                          The profiler will be run by cpu profile Goroutine: The profiler
                          will be run by goroutine'
                        type: string
                    required:
                    - source
                    - type
                    type: object
                  java:
                    description: Java specifies the action to perform for profiling
                      a java program.
                    properties:
                      hprofFilePath:
                        description: HPROFFilePath is the path of hprof file. It must
                          be an absolute path on node.
                        type: string
                      type:
                        description: "Type is the type of the java profiler. There
                          are two possible type values: \n Arthas: The profiler will
                          be run by arthas. MemoryAnalyzer: The profiler will be run
                          by eclipse memory analyzer."
                        type: string
                    required:
                    - type
                    type: object
                  name:
                    description: Name specifies the name of a profiler.
                    type: string
                  timeoutSeconds:
                    description: Number of seconds after which the profiler times
                      out. Defaults to 30 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  type:
                    description: "Type is the type of the profiler. There are three
                      possible type values: \n InformationCollector: The profiler
                      will be run by information manager. Diagnoser: The profiler
                      will be run by diagnoser chain. Recoverer: The profiler will
                      be run by recoverer chain."
                    type: string
                required:
                - name
                - type
                type: object
              type: array
            prometheusAlert:
              description: PrometheusAlert contains the prometheus alert about the
                diagnosis from prometheus alert source. This must be specified if
                diagnosis source is PrometheusAlert.
              properties:
                annotations:
                  additionalProperties:
                    description: A LabelValue is an associated value for a LabelName.
                    type: string
                  description: Annotations contains extra key value information which
                    does not define alert identity.
                  type: object
                endsAt:
                  description: EndsAt specifies the known end time for this alert.
                  format: date-time
                  type: string
                generatorURL:
                  description: GeneratorURL specifies the url of alert generator.
                  type: string
                labels:
                  additionalProperties:
                    description: A LabelValue is an associated value for a LabelName.
                    type: string
                  description: Labels contains label value pairs for purpose of aggregation,
                    matching, and disposition dispatching. This must minimally include
                    an "alertname" label.
                  type: object
                startsAt:
                  description: StartsAt specifies the known start time for this alert.
                  format: date-time
                  type: string
              required:
              - annotations
              - generatorURL
              - labels
              type: object
            source:
              description: Source is the diagnosis source. Valid sources are PrometheusAlert,
                KubernetesEvent and Custom.
              type: string
          required:
          - source
          type: object
        status:
          description: DiagnosisStatus defines the observed state of Diagnosis.
          properties:
            commandExecutors:
              description: CommandExecutors is the list of command execution results.
              items:
                description: CommandExecutorStatus is the command execution result.
                properties:
                  command:
                    description: Command represents a command being prepared and run.
                    items:
                      type: string
                    type: array
                  error:
                    description: Error is the command execution error.
                    type: string
                  stderr:
                    description: Stderr is standard error of the command.
                    type: string
                  stdout:
                    description: Stdout is standard output of the command.
                    type: string
                  type:
                    description: "Type is the type of the command executor. There
                      are three possible type values: \n InformationCollector: The
                      command executor will be run by information manager. Diagnoser:
                      The command executor will be run by diagnoser chain. Recoverer:
                      The command executor will be run by recoverer chain."
                    type: string
                required:
                - command
                - type
                type: object
              type: array
            conditions:
              description: Conditions contains current service state of diagnosis.
              items:
                description: DiagnosisCondition contains details for the current condition
                  of this diagnosis.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime specifies last time the condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human readable message indicating details
                      about last transition.
                    type: string
                  reason:
                    description: Reason is a unique, one-word, CamelCase reason for
                      the condition's last transition.
                    type: string
                  status:
                    description: Status is the status of the condition. Can be True,
                      False, Unknown.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            context:
              description: Context is a blob of information about the diagnosis, meant
                to be user-facing content and display instructions. This field may
                contain customized values for custom source.
              type: object
            phase:
              description: "Phase is a simple, high-level summary of where the diagnosis
                is in its lifecycle. The conditions array, the reason and message
                fields contain more detail about the pod's status. There are six possible
                phase values: \n InformationCollecting: The diagnosis has been passed
                to information manager and some of the information collectors have
                been started. At least one information collector is still running.
                Diagnosing: The diagnosis has been passed to diagnoser chain and some
                of the diagnosers have been started. At least one diagnoser is still
                running. Recovering: The diagnosis has been passed to recoverer chain
                and some of the recoverers have been started. At least one recoverer
                is still running. Succeeded: The diagnosis has been successfully recovered
                by some of the recoverers. Failed: All diagnosers and recoverers have
                been executed, and none of diagnosers and recoverers is able to diagnose
                and recover the diagnosis. Unknown: For some reason the state of the
                diagnosis could not be obtained."
              type: string
            profilers:
              description: Profilers is the list of profiler status.
              items:
                description: ProfilerStatus is the profiler status.
                properties:
                  endpoint:
                    description: Endpoint specifies how to navigate through a profile.
                      It will be set as expired after expiration seconds.
                    type: string
                  error:
                    description: Error is the profiler error.
                    type: string
                  name:
                    description: Name specifies the name of a profiler.
                    type: string
                  type:
                    description: "Type is the type of the profiler. There are three
                      possible type values: \n InformationCollector: The profiler
                      will be run by information manager. Diagnoser: The profiler
                      will be run by diagnoser chain. Recoverer: The profiler will
                      be run by recoverer chain."
                    type: string
                required:
                - endpoint
                - name
                - type
                type: object
              type: array
            startTime:
              description: StartTime is RFC 3339 date and time at which the object
                was acknowledged by the system.
              format: date-time
              type: string
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
